package com.itheima.test5;


public class Student {
	private String name;
	private int age;

	/*
	 * 构造方法概述
	 * 	 构造方法也叫做构造器、构造函数。
	 * 	 作用：在创建对象的时候给成员变量进行赋值的。
	 */

	/*
	 * 构造方法的格式：
	 * 	 修饰符 类名(参数) {
	 * 	 	方法体;
	 * 	 }
	 */

	/*
	 * 特点：
	 * 	 1.方法名与类名相同，大小写也要一致
	 * 	 2.没有返回值类型，连void都没有
	 * 	 3.没有具体的返回值（不能由return带回结果数据）
	 */

	/*
	 * 执行实际：
	 * 	 1.创建对象的时候由虚拟机调用，不能手动调用构造方法
	 * 	 2.每创建一次对象，就会调用一次构造方法
	 */

	/*
	 * 构造方法的注意事项：
	 *   1.构造方法的定义
	 * 		- 如果没有定义构造方法，系统将给出一个默认的无参数构造方法
	 * 		- 如果定义了构造方法，系统将不再提供默认的构造方法；除非自己把无参数构造也写上
	 * 	 2.构造方法的重载
	 * 		- 带参数构造方法，和无参数构造方法，两者方法名相同，但是参数不同，这叫做构造方法的重载
	 * 	 3.推荐的使用过方式
	 * 		- 无论是否使用，都手动书写无参数构造方法，和带全部参数的构造方法
	 */

	/*
	 * 构造方法总结：
	 *   1.构造方法的作用？
	 * 		- 创造对象的时候，由虚拟机自动调用，给成员变量进行初始化的。
	 * 	 2.构造方法有几种，各自的作用是什么？
	 * 		- 无参数构造方法：初始化对象时，成员变量的数据均采用默认值。
	 * 		- 有参数构造方法：在初始化对象的时候，可以同时为对象进行赋值。
	 *	 3.构造方法有哪些注意事项？
	 * 		- 任何类定义出来，默认就自带了无参数构造器，写不写都有。
	 * 		- 一旦定义了有参数构造器，无参数构造器就没有了，此时就需要自己写无参数构造器了。
	 * 		- 建议在任何时候都手动写上空参和带全部参数的构造方法。
	 */

	/*
	 * 构造方法扫盲：
	 * 		构造方法就是用来创建对象的。 ❌
	 *
	 * 构造方法概述：
	 * 		创建对象的时候，虚拟机会自动调用构造方法，作用时给成员变量进行初始化的。 ✅
	 */

	// 如果我们自己没有写任何的构造方法，那么虚拟机会给我们加一个默认的空参构造方法
	public Student() {    //... 空参构造
		System.out.println("这是一个空参构造方法");
	}

	public Student(String name, int age) {    //... 带参构造
		this.name = name;
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}
}
