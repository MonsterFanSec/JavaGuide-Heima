package com.itheima.a02myhashmap;
/*
 * HashMap的特点：
 * 	1.HashMap是Map里面的一个实现类
 * 	2.没有额外需要学习的特有方法，直接使用Map里面的方法就可以了。
 * 	3.特点都是由键决定的：无序、不重复、无索引
 * 	4.HashMap跟HashSet底层原理是一模一样的，都是哈希表结构
 * 		哈希表：底层是数组 + 链表
 * 			  JDK8以后，为了提高它的性能，底层又增加了红黑树
 * 	5.HashMap底层会创建长度为16，默认加载因子为0.75的数组；
 * 	  利用map.put("键","值")，创建一个Entry对象，Entry对象里面记录的就是要添加的键和值；
 * 	  利用键，计算哈希值，跟值无关；
 * 	  然后再计算出在数组中应存入的索引；
 * 	  如果该位置为null，则直接添加；
 * 	  如果该位置不为null，则调用equals方法比较键的属性值；
 * 	  如果键的属性值相同，则覆盖；
 * 	  如果键的属性值不同，则添加新的Entry对象；
 * 	  	JDK8以前，新元素会添加到数组当中，原先的会挂在新的Entry对象下面，形成一条链表；
 * 	    JDK8以后，新的Entry对象会直接挂在老元素的下面，形成一条链表；当链表长度超过8 & 数组长度>=64，自动转成红黑树。
 *
 * 	总结：
 * 		1.HashMap底层是哈希表结构的
 * 		2.依赖hashCode方法和equals方法保证键的唯一
 * 		3.如果键存储的是自定义对象，需要重写hashCode和equals方法
 * 		  如果值存储自定义对象，不需要重写hashCode和equals方法
 */

public class Test {
}
