package mysocketnet.clientdir;

/*
 * 什么是网络编程？
 * 		在网络比通信协议下，不同计算机上运行的程序，进行的数据传输。
 * 		- 应用场景：即时通信、网游对战、金融证券、国际贸易、邮件、等等。
 * 		不管是什么场景，都是计算机跟计算机之间通过网络进行数据传输。
 * 		- Java中可以使用java.net包下的技术轻松开发出常见的网络应用程序。
 *
 * 常见的软件架构：
 * 		C/S：Client/Server
 * 		在用户本地需要下载并安装客户端程序，在远程有一个服务器端程序。（如QQ、Steam）
 * 		通过客户端访问服务器
 *
 * 		B/S：Browser/Server
 * 		只需要一个浏览器，用户通过不同的网址。客户访问不同的服务器。（如淘宝、京东）
 * 		通过浏览器访问服务器
 *
 * BS架构的优缺点：
 * 		1.不需要开发客户端，只需要页面+服务端
 * 		2.用户不需要下载，打开浏览器就能使用
 * 		3.如果应用过大，用户体验收到影响
 *
 * CS架构的优缺点：
 * 		1.画面可以做的非常精美，用户体验好
 * 		2.需要开发客户端，也需要开发服务端
 * 		3.用户需要下载和更新的时候太麻烦
 *
 *
 * 总结：
 * 1.什么是网络编程？
 * 		计算机跟计算机之间通过网络进行数据传输。
 *
 * 2.常见软件架构有那些？
 * 		CS/BS
 * 3.通信的软件架构CS/BS各有什么区别和优缺点
 * 		CS：客户端服务端模式需要开发客户端
 * 		BS：浏览器服务端模式不需要开发客户端
 * 		CS：适合定制专业化的办公类软件如：IDEA、网游
 * 		BS：适合移动互联网应用，可以在任何地方随时访问的系统
 */
public class Test {
}
