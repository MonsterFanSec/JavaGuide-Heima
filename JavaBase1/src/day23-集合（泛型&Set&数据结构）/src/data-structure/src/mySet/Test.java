package mySet;

/*
 * List系列集合：添加的元素是有序、可重复、有索引
 * Set系列集合：添加的元素是无序、不重复、无索引
 *
 *
 * Set系列集合：
 * 	- 无序：存取顺序不一致
 * 	- 不重复：可以去除重复
 * 	- 无索引：没有带索引的方法，所以不能使用普通for循环遍历，也不能通过索引来获取元素
 *
 * Set集合的实现类：
 * 	- HashSet：无序、不重复、无索引
 * 	- LinkedHashSet：有序、不重复、无索引
 * 	- TreeSet：可排序、不重复、无索引
 *
 * Set接口中的方法基本上与Collection的API一致。
 *
 * Set总结：
 * 	1.Set系列集合的特点
 * 		- 无序、不重复、无索引
 * 		- Set集合的方法基本上与Collection的API一致。
 *  2.Set集合的实现类特点
 * 		- HashSet：无序、不重复、无索引
 * 		- LinkedHashSet：有序、不重复、无索引
 * 		- TreeSet：可排序、不重复、无索引
 *
 * TreeSet总结:
 * 	1.TreeSet集合的特点是怎样的？
 * 		- 可排序、不重复、无索引
 * 		- 底层基于红黑树实现排序，增删改查性能较好
 *  2.TreeSet集合自定义排序规则有几种方式？
 * 		- 方式一：javabean类实现Comparable接口，指定比较规则
 * 		- 方式二：创建集合时，自定义Comparator比较器对象，指定比较规则
 *
 * 		默认情况下，用第一种排序方式，如果第一种不能满足当前的需求，采取第二种方式。
 * 		比如String，Integer底层已经实现了排序，那么我需要根据方式二来自定义排序。
 *
 * 		如果方式一和方式二同时存在，则以方式二（比较器规则）为准。
 * 	3.方法返回值的特点
 * 		- 负数：表示当前要添加的元素是小的，存左边
 * 		- 正数：表示当前要添加的元素是大的，存右边
 * 		- 0：表示当前要添加的元素已经存在，舍弃
 *
 * 单列集合总结：
 * 	1.如果想要集合中的元素可重复
 * 		- 用ArrayList集合，基于数组的。（用的最多）
 * 	2.如果想要集合中的元素可重复，而且当前的增删操作明显多于查询
 * 		- 用LinkedList集合，基于链表的。
 * 	3.如果想对集合中的元素去重
 * 		- 用HashSet集合，基于哈希表的。（用的最多）
 * 	4.如果想对集合中的元素去重，而且保证存取顺序
 * 		- 用LinkedHashSet集合，基于哈希表和双链表，效率低于HashSet。
 * 	5.如果想对集合中的元素进行排序
 * 		- 用TreeSet集合，基于红黑树。后续也可以用List集合实现排序。
 */
public class Test {
}
