package com.itheima.log;

/*
 * 想清楚的知道一个系统运行的过程和详情怎么办？
 *
 * 日志：
 * 	- 生活中的日志：生活中的日志就好比日记，可以记录你生活的点点滴滴。
 * 	- 程序中的日志：程序中的日志可以用来记录程序运行过程中的信息，并可以进行永久存储。
 *
 * 输出语句的弊端：
 * 	- 信息只能展示在控制台
 *  - 不能将其记录到其他的位置（文件，数据库）
 *  - 想取消记录的信息需要修改代码才可以完成
 *
 * 日志技术具备的优势
 *  - 可以将系统执行的信息选择性的记录到指定的位置（控制台、文件中、数据库中）。
 *  - 可以随时以开关的形式控制是否记录日志，无需修改源代码。
 *
 * ----------------------------------------------------------------------------
 * 日志规范接口：
 * 		Commons Logging
 * 			简称：JCL
 * 		Simple Logging Facade for Java
 * 			简称：slf4j
 *
 * 日志规范：一些接口，提供给日志的实现框架设计的标准。
 * 日志框架：牛人或者第三方公司已经做好的日志记录实现代码，后来直接可以拿去使用。
 * 因为对Commons Logging的接口不满意，有人就搞了SLF4J。因为对Log4j的性能不满意，有人就搞了Logback。
 *
 *
 * 总结：
 * 	1.日志的规范是什么，常见的有几种形式。
 * 		- 日志规范大多是一些接口，提供给实现框架去设计的。
 * 		- 常见的规范是：
 * 			- Commons Logging
 * 			- Simple Logging Facade for Java
 *
 *  2.日志的实现框架有那些常见的？
 * 		- Log4J
 * 		- Logback（我们重点学习的，其他的都大同小异）
 *
 * ----------------------------------------------------------------------------
 * Logback日志框架
 *  - Logback是基于slf4j的日志规范实现的框架，性能比之前使用的log4j要好。
 *  - 官方网址：https://logback.qos.ch/index.html
 *
 * Logback主要分为三个技术模块：
 *  - logback-core:该模块为其他两个模块提供基础代码，必须有。
 *  - logback-classic：完整实现了slf4j API的模块。
 *  - logback-access模块与Tomcat和Jetty等Servlet容器集成，以提供HTTP访问日志功能。
 */
public class Test {
	public static void main(String[] args) {

	}

	/*
	 * 作用：把一些信息永久的保存到本地文件
	 * 方法起的见名之意
	 *
	 * infoToFile
	 * 以前有一个程序猿，偷懒写成info2File，这种习惯就被保留下来了
	 * To:2
	 * For:4
	 */
	public static void info2File() {

	}
}
